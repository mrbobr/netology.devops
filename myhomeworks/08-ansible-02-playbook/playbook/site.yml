---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      ansible.builtin.command: clickhouse start
  tasks:
    - name: Get rpm, install and start clickhouse
      tags: clickhouse
      block:
        - name: Create clickhouse temp dir
          ansible.builtin.file:
            path: "{{ clickhouse_tmp_dir }}"
            state: directory
            mode: 0755
        - name: Get clickhouse distrib *.noarch.rpm
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "{{ clickhouse_tmp_dir }}/{{ item }}-{{ clickhouse_version }}.rpm"
            mode: 0755
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse-common-static.version.x86_64.rpm
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            dest: "{{ clickhouse_tmp_dir }}/clickhouse-common-static-{{ clickhouse_version }}.rpm"
            mode: 0755
        - name: Install clickhouse packages
          ansible.builtin.yum:
            name:
              - "{{ clickhouse_tmp_dir }}/clickhouse-common-static-{{ clickhouse_version }}.rpm"
              - "{{ clickhouse_tmp_dir }}/clickhouse-client-{{ clickhouse_version }}.rpm"
              - "{{ clickhouse_tmp_dir }}/clickhouse-server-{{ clickhouse_version }}.rpm"
          notify: Start clickhouse service
#       register: result
#    - name: Start clickhouse
 #     ansible.builtin.command: clickhouse start
#      when: result is changed
  post_tasks:
    - name: Create database
      tags: clickhouse
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

- name: Install Vector
  hosts: vector
  handlers:
    - name: Start vector
      ansible.builtin.shell: "{{ vector_home_dir }}/bin/vector --config {{ vector_home_dir }}/config/vector.toml > /dev/null &"
  tasks:
    - name: Create user and get vector distrib
      tags: vector
      block:
        - name: Create vector group
          become: true
          ansible.builtin.group:
            name: vector
        - name: Create vector user
          become: true
          ansible.builtin.user:
            group: vector
            name: vector
            password: vector
        - name: Create vector dirs
          become: true
          ansible.builtin.file:
            path: "{{ item }}"
            state: directory
            mode: 0755
            owner: vector
            group: vector
          loop:
            - "{{ vector_tmp_dir }}"
            - "{{ vector_home_dir }}"
            - "{{ vector_data_dir }}"
        - name: Get vector distrib
          become: true
          ansible.builtin.get_url:
            url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-x86_64-unknown-linux-musl.tar.gz"
            dest: "{{ vector_tmp_dir }}/vector-{{ vector_version }}-x86_64.rpm.tar.gz"
            owner: vector
            group: vector
            mode: 0755
          register: result
    - name: Extract Vector
      tags: vector
      become: true
      ansible.builtin.unarchive:
        src: "{{ vector_tmp_dir }}/vector-{{ vector_version }}-x86_64.rpm.tar.gz"
        dest: "{{ vector_home_dir }}"
        extra_opts: [--strip-components=2]
        owner: vector
        group: vector
        mode: 0755
      when: result.changed
    - name: Start vector
      tags: vector
      block:
        - name: Put vector config
          become: true
          ansible.builtin.template:
            backup: true
            src: "{{ vector_config }}"
            dest: "{{ vector_home_dir }}/config/vector.toml"
            group: vector
            owner: vector
            mode: 0755
          notify: Start vector
